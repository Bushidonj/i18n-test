{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\i18n-test\\\\src\\\\Components\\\\sections\\\\Header\\\\ToggleTheme.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport IconSun from '../../icons/IconSun';\nimport IconMoon from '../../icons/IconMoon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToggleTheme({\n  iconClass = 'w-6 h-6 md:w-5 md:h-5 md:inline-block',\n  className = ''\n}) {\n  _s();\n  const [dark, setDark] = useState(false);\n  useEffect(() => {\n    const stored = localStorage.getItem('theme');\n    const systemPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const shouldDark = stored ? stored === 'dark' : systemPrefersDark;\n    setDark(shouldDark);\n    const root = document.documentElement.classList;\n    if (shouldDark) root.add('dark');else root.remove('dark');\n  }, []);\n  const toggle = () => {\n    const next = !dark;\n    setDark(next);\n    const root = document.documentElement.classList;\n    if (next) {\n      root.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      root.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: toggle,\n    \"aria-label\": \"Toggle between Dark and Light mode\",\n    className: `text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center ${className}`,\n    children: dark ? /*#__PURE__*/_jsxDEV(IconMoon, {\n      className: iconClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(IconSun, {\n      className: iconClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleTheme, \"NIHBMCmnQYc/ThVDFkFE1j89faA=\");\n_c = ToggleTheme;\nvar _c;\n$RefreshReg$(_c, \"ToggleTheme\");","map":{"version":3,"names":["React","useEffect","useState","IconSun","IconMoon","jsxDEV","_jsxDEV","ToggleTheme","iconClass","className","_s","dark","setDark","stored","localStorage","getItem","systemPrefersDark","window","matchMedia","matches","shouldDark","root","document","documentElement","classList","add","remove","toggle","next","setItem","type","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/GitHub/i18n-test/src/Components/sections/Header/ToggleTheme.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport IconSun from '../../icons/IconSun';\r\nimport IconMoon from '../../icons/IconMoon';\r\n\r\nexport default function ToggleTheme({ iconClass = 'w-6 h-6 md:w-5 md:h-5 md:inline-block', className = '' }) {\r\n  const [dark, setDark] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('theme');\r\n    const systemPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    const shouldDark = stored ? stored === 'dark' : systemPrefersDark;\r\n    setDark(shouldDark);\r\n    const root = document.documentElement.classList;\r\n    if (shouldDark) root.add('dark');\r\n    else root.remove('dark');\r\n  }, []);\r\n\r\n  const toggle = () => {\r\n    const next = !dark;\r\n    setDark(next);\r\n    const root = document.documentElement.classList;\r\n    if (next) {\r\n      root.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      root.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={toggle}\r\n      aria-label=\"Toggle between Dark and Light mode\"\r\n      className={`text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center ${className}`}\r\n    >\r\n      {dark ? <IconMoon className={iconClass} /> : <IconSun className={iconClass} />}\r\n    </button>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,WAAWA,CAAC;EAAEC,SAAS,GAAG,uCAAuC;EAAEC,SAAS,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAC3G,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC5C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,UAAU,IAAID,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IACxG,MAAMC,UAAU,GAAGP,MAAM,GAAGA,MAAM,KAAK,MAAM,GAAGG,iBAAiB;IACjEJ,OAAO,CAACQ,UAAU,CAAC;IACnB,MAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS;IAC/C,IAAIJ,UAAU,EAAEC,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,KAC5BJ,IAAI,CAACK,MAAM,CAAC,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB,MAAMC,IAAI,GAAG,CAACjB,IAAI;IAClBC,OAAO,CAACgB,IAAI,CAAC;IACb,MAAMP,IAAI,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS;IAC/C,IAAII,IAAI,EAAE;MACRP,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;MAChBX,YAAY,CAACe,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLR,IAAI,CAACK,MAAM,CAAC,MAAM,CAAC;MACnBZ,YAAY,CAACe,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC;EAED,oBACEvB,OAAA;IACEwB,IAAI,EAAC,QAAQ;IACbC,OAAO,EAAEJ,MAAO;IAChB,cAAW,oCAAoC;IAC/ClB,SAAS,EAAG,4MAA2MA,SAAU,EAAE;IAAAuB,QAAA,EAElOrB,IAAI,gBAAGL,OAAA,CAACF,QAAQ;MAACK,SAAS,EAAED;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG9B,OAAA,CAACH,OAAO;MAACM,SAAS,EAAED;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEb;AAAC1B,EAAA,CApCuBH,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}