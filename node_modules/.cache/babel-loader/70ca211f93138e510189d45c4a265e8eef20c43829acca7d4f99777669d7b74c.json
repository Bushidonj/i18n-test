{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\i18n-test\\\\src\\\\Components\\\\ui\\\\ItemGrid.jsx\";\nimport React from 'react';\nimport { ITEMGRID_DEFAULT_TONE } from './config.js';\n\n// React ItemGrid with variant support\n// Props: {\n//   items,\n//   defaultIcon: Component,\n//   variant?: 'panel' | 'none',\n//   classes?: { container, card, panel, icon, title, description }\n//   renderItem?: (item, idx, helpers) => React.ReactNode\n//   textTone?: 'auto' | 'contrast' | 'muted'\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemGrid = ({\n  items = [],\n  defaultIcon: DefaultIcon = null,\n  variant = 'panel',\n  classes = {},\n  renderItem,\n  textTone = ITEMGRID_DEFAULT_TONE\n}) => {\n  const containerClasses = `grid grid-cols-1 gap-4 ${classes.container || ''}`;\n\n  // Variant-based defaults\n  const defaultPanel = 'border border-blue-900/40 rounded-xl p-6';\n  const defaultNone = '';\n  const resolvedPanel = classes.panel || (variant === 'panel' ? defaultPanel : defaultNone);\n  const cardClasses = `${resolvedPanel} ${classes.card || ''}`.trim();\n  const iconWrapClasses = classes.icon || 'text-white bg-secondary-500 dark:bg-secondary-700 rounded-full w-10 h-10 p-2 md:w-12 md:h-12 md:p-3 mr-4';\n  const titleClasses = classes.title || '';\n  const toneMap = {\n    auto: 'text-gray-700 dark:text-gray-300',\n    contrast: 'text-gray-800 dark:text-gray-100',\n    muted: 'text-gray-600 dark:text-gray-400'\n  };\n  const descriptionClasses = classes.description || toneMap[textTone] || toneMap.auto;\n  const helpers = {\n    DefaultIcon,\n    iconWrapClasses,\n    titleClasses,\n    descriptionClasses,\n    cardClasses\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: containerClasses,\n    children: Array.isArray(items) && items.map((it, idx) => renderItem ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: renderItem(it, idx, helpers)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cardClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [DefaultIcon ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: iconWrapClasses,\n          children: /*#__PURE__*/_jsxDEV(DefaultIcon, {\n            size: 24,\n            color: \"#ffffff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: `m-0 font-semibold ${titleClasses}`,\n          children: it.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `mt-2 ${descriptionClasses}`,\n        children: it.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = ItemGrid;\nexport default ItemGrid;\nvar _c;\n$RefreshReg$(_c, \"ItemGrid\");","map":{"version":3,"names":["React","ITEMGRID_DEFAULT_TONE","jsxDEV","_jsxDEV","ItemGrid","items","defaultIcon","DefaultIcon","variant","classes","renderItem","textTone","containerClasses","container","defaultPanel","defaultNone","resolvedPanel","panel","cardClasses","card","trim","iconWrapClasses","icon","titleClasses","title","toneMap","auto","contrast","muted","descriptionClasses","description","helpers","className","children","Array","isArray","map","it","idx","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","size","color","_c","$RefreshReg$"],"sources":["D:/GitHub/i18n-test/src/Components/ui/ItemGrid.jsx"],"sourcesContent":["import React from 'react';\r\nimport { ITEMGRID_DEFAULT_TONE } from './config.js';\r\n\r\n// React ItemGrid with variant support\r\n// Props: {\r\n//   items,\r\n//   defaultIcon: Component,\r\n//   variant?: 'panel' | 'none',\r\n//   classes?: { container, card, panel, icon, title, description }\r\n//   renderItem?: (item, idx, helpers) => React.ReactNode\r\n//   textTone?: 'auto' | 'contrast' | 'muted'\r\n// }\r\nconst ItemGrid = ({ items = [], defaultIcon: DefaultIcon = null, variant = 'panel', classes = {}, renderItem, textTone = ITEMGRID_DEFAULT_TONE }) => {\r\n  const containerClasses = `grid grid-cols-1 gap-4 ${classes.container || ''}`;\r\n\r\n  // Variant-based defaults\r\n  const defaultPanel = 'border border-blue-900/40 rounded-xl p-6';\r\n  const defaultNone = '';\r\n\r\n  const resolvedPanel = classes.panel || (variant === 'panel' ? defaultPanel : defaultNone);\r\n  const cardClasses = `${resolvedPanel} ${classes.card || ''}`.trim();\r\n  const iconWrapClasses = classes.icon || 'text-white bg-secondary-500 dark:bg-secondary-700 rounded-full w-10 h-10 p-2 md:w-12 md:h-12 md:p-3 mr-4';\r\n  const titleClasses = classes.title || '';\r\n  const toneMap = {\r\n    auto: 'text-gray-700 dark:text-gray-300',\r\n    contrast: 'text-gray-800 dark:text-gray-100',\r\n    muted: 'text-gray-600 dark:text-gray-400',\r\n  };\r\n  const descriptionClasses = classes.description || toneMap[textTone] || toneMap.auto;\r\n\r\n  const helpers = { DefaultIcon, iconWrapClasses, titleClasses, descriptionClasses, cardClasses };\r\n\r\n  return (\r\n    <div className={containerClasses}>\r\n      {Array.isArray(items) && items.map((it, idx) => (\r\n        renderItem ? (\r\n          <React.Fragment key={idx}>{renderItem(it, idx, helpers)}</React.Fragment>\r\n        ) : (\r\n          <div key={idx} className={cardClasses}>\r\n            <div className=\"flex items-center\">\r\n              {DefaultIcon ? (\r\n                <div className={iconWrapClasses}>\r\n                  <DefaultIcon size={24} color=\"#ffffff\" />\r\n                </div>\r\n              ) : null}\r\n              <h3 className={`m-0 font-semibold ${titleClasses}`}>{it.title}</h3>\r\n            </div>\r\n            <p className={`mt-2 ${descriptionClasses}`}>{it.description}</p>\r\n          </div>\r\n        )\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}